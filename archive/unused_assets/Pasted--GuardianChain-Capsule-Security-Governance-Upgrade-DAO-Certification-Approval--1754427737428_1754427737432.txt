✅ GuardianChain Capsule Security + Governance Upgrade

---

### 🏛️ DAO Certification Approval (Pre-Mint Validation)

**Capsules must be certified by DAO before mint:**
```ts
// /middleware/requireCertification.ts
export async function requireCertification(req, res, next) {
  const { capsuleId } = req.body;
  const capsule = await db.capsule.findUnique({ where: { id: capsuleId } });

  if (!capsule || !capsule.dao_certified) {
    return res.status(403).json({ message: 'Capsule not DAO-certified' });
  }
  next();
}
```

**Add to `/mint` route:**
```ts
router.post('/mint', requireAuth, requireCertification, async (req, res) => { ... });
```

**SQL Schema:**
```sql
ALTER TABLE capsules ADD COLUMN dao_certified BOOLEAN DEFAULT FALSE;
```

**DAO Admin Panel:**
```ts
// /routes/admin/dao.ts
router.post('/certify/:id', requireAdmin, async (req, res) => {
  const id = req.params.id;
  await db.capsule.update({ where: { id }, data: { dao_certified: true } });
  res.json({ success: true });
});
```

---

### 🧬 Capsule Provenance History Graph

**Track edits, merges, and content lineage**
```sql
CREATE TABLE capsule_lineage (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  parent_capsule UUID REFERENCES capsules(id),
  child_capsule UUID REFERENCES capsules(id),
  action TEXT,
  created_at TIMESTAMP DEFAULT now()
);
```

**Frontend Graph UI:**
```tsx
// /components/CapsuleLineageGraph.tsx
import ReactFlow from 'reactflow';
const CapsuleLineageGraph = ({ data }) => <ReactFlow nodes={data.nodes} edges={data.edges} />;
```

---

### 💸 Minting Fee Tier Logic (Stripe + GTT Discounts)

**User Tier-based pricing with GTT wallet discount:**
```ts
function calculateMintFee(user, baseFee) {
  if (user.tier === 'SUPPORTER') return baseFee * 0.75;
  if (user.tier === 'AMBASSADOR') return baseFee * 0.5;
  return baseFee;
}
```

**Stripe Checkout (if no GTT balance):**
```ts
const session = await stripe.checkout.sessions.create({
  payment_method_types: ['card'],
  line_items: [{ price_data: { currency: 'usd', product_data: { name: 'Capsule Mint' }, unit_amount: 500 }, quantity: 1 }],
  mode: 'payment',
  success_url: `${domain}/mint/success`,
  cancel_url: `${domain}/mint/cancel`,
});
```

**Or GTT transfer deduction (requires on-chain script):**
```ts
await transferGTT(user.wallet, contractAddress, mintFee);
```

---

✅ Replit AI Agent Tasks:
- Add `dao_certified` to capsules table
- Add `capsule_lineage` table + Graph UI
- Secure `/mint` route with DAO cert + ownership check
- Sync Stripe API with environment secrets
- Calculate GTT tier pricing with fallback to Stripe

---

Would you like to:
- Show DAO cert + lineage graph in `/profile`?
- Add SMRI trait boost for DAO mints?
- Or send to GitHub / export ZIP now?
