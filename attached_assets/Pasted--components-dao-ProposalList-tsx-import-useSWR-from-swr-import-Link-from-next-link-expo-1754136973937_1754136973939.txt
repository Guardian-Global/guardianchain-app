// components/dao/ProposalList.tsx
import useSWR from "swr";
import Link from "next/link";

export default function ProposalList() {
  const { data: proposals, error } = useSWR("/api/dao/proposals", (url) => fetch(url).then(res => res.json()));

  if (error) return <p className="text-red-500">Failed to load proposals.</p>;
  if (!proposals) return <p>Loading...</p>;

  return (
    <div>
      {proposals.map((p) => (
        <div key={p.id} className="bg-brand-surface text-brand-textLight p-4 mb-3 rounded-vault shadow-card">
          <h2 className="text-lg font-bold">{p.title}</h2>
          <p className="text-sm italic">{p.description}</p>
          <p className="text-xs text-gray-400 mt-1">Status: {p.status}</p>
          <Link href={`/dao/proposal/${p.id}`} className="text-sm text-brand-accent mt-1 inline-block hover:underline">
            🗳 View / Vote
          </Link>
        </div>
      ))}
    </div>
  );
}


// pages/dao/create.tsx — CreateProposal Form
import { useState } from "react";
import Layout from "@/components/layout/Layout";
import PageHeader from "@/components/layout/PageHeader";

export default function CreateProposal() {
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const submit = async () => {
    await fetch("/api/dao/create", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ title, description })
    });
    alert("Proposal submitted");
  };

  return (
    <Layout title="Create Proposal" tier="dao-owner">
      <PageHeader title="🏛 Create Proposal" subtitle="Propose governance changes to GuardianChain" />
      <div className="bg-brand-surface p-6 rounded-vault shadow-card">
        <input
          value={title}
          onChange={(e) => setTitle(e.target.value)}
          placeholder="Proposal Title"
          className="w-full mb-2 p-2 rounded text-brand-textDark"
        />
        <textarea
          value={description}
          onChange={(e) => setDescription(e.target.value)}
          placeholder="Proposal Description"
          className="w-full p-2 rounded text-brand-textDark"
        />
        <button onClick={submit} className="mt-3 primary">Submit</button>
      </div>
    </Layout>
  );
}
