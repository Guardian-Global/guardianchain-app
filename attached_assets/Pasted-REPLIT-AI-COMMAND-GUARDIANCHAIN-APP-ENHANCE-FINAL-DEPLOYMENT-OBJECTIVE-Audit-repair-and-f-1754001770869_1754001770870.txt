REPLIT AI COMMAND: GUARDIANCHAIN.APP.ENHANCE_FINAL_DEPLOYMENT

üéØ OBJECTIVE:
Audit, repair, and finalize the production build of https://guardianchain.app ‚Äî including logic restoration, layout fixes, tiered access control, error cleanup, and onboarding. This is a pre-mainnet release and must be visually elite, mobile-first, secure, and fully functional.

---

üõ†Ô∏è TASK LIST (DEEP + SPECIFIC)

1. üîß NAVIGATION BAR (components/Navigation.tsx or app/layout.tsx)
   - Remove links to:
     - /admin
     - /enterprise-auth
     - /dashboard
     unless `session.user?.role === 'admin' || 'enterprise'`
   - Fix duplication of "Home"
   - Collapse to hamburger on mobile using `@headlessui/react` or native `<details>` toggle
   - Move Auth buttons (Login/Register/Logout) to far right with tailwind `ml-auto`

---

2. üîê TIERED AUTH GUARD (middleware.ts + utils/withAuthGuard.tsx)
   - Create `withAuthGuard.tsx`
     ```tsx
     export function withAuthGuard(Component, allowedRoles = []) {
       return function Guarded(props) {
         const { data: session } = useSession();
         if (!session || (allowedRoles.length && !allowedRoles.includes(session.user?.role))) {
           redirect('/login');
         }
         return <Component {...props} />;
       };
     }
     ```
   - Wrap the following pages:
     - `/admin`, `/enterprise-auth`, `/vault`, `/command`, `/dashboard`
   - Protect API routes under `/api/capsule/`, `/api/vault/`, `/api/yield/` with session.role check

---

3. ‚ö†Ô∏è BUTTON & LINK REPAIR (Inspect these components)
   - `components/CapsuleCard.tsx`
     - Fix `Unlock`, `Certify`, and `Explore` buttons: currently fire null or broken logic
     - Link `Unlock` to: `/capsule/[id]?mode=unlock`
     - `Certify` ‚Üí `/verify/[capsuleId]`
     - Add missing `aria-label`, `onClick` handlers
   - `pages/explore.tsx`
     - Fix grid loop for capsule cards (currently fails on missing metadata)

---

4. üß† ONBOARDING EXPERIENCE (NEW: components/WelcomeTour.tsx)
   - Build intro flow shown only once per user using:
     ```tsx
     if (typeof window !== "undefined" && !localStorage.getItem("seenWelcome")) {
       showModal();
       localStorage.setItem("seenWelcome", "true");
     }
     ```
   - Include slides on:
     - What is a Capsule?
     - How Yield is Earned
     - Veritas Certificate
     - Unlocking and Submitting Truth

---

5. üì± MOBILE RESPONSIVENESS FIXES
   - `CapsuleGrid.tsx` (or wherever capsule cards render):
     - Use `grid-cols-1 sm:grid-cols-2 md:grid-cols-3`
     - Add padding and spacing to prevent edge crowding
   - `Header.tsx` and `Footer.tsx`
     - Collapse layout under `768px`
     - Ensure `text-xl` and buttons do not overflow on small devices

---

6. üì¶ SYSTEM ERROR CLEANUP (Confirm via console logs + audit)
   - Fix:
     - Geist font `undefined variable` ‚Üí replace with:
       ```tsx
       import { Inter } from 'next/font/google';
       const geistSans = Inter({ subsets: ['latin'], variable: '--font-sans' });
       ```
     - Supabase API Key issue (`Invalid Key`) in `/api/trending-capsules`
       ‚Üí Check if `NEXT_PUBLIC_SUPABASE_ANON_KEY` is valid and available in `.env`
     - Console error: `TypeError: props.data is undefined` in CapsuleViewer ‚Üí add fallback or error boundary

---

7. üß† CAPSULE LOGIC REPAIR
   - `pages/mint.tsx` ‚Üí Check if capsule metadata submission properly writes to Supabase and IPFS
   - `utils/generateVeritasPDF.ts` ‚Üí Confirm PDF is generating and uploading to IPFS (Pinata/web3.storage)
   - `components/CapsuleForm.tsx`:
     - Add validation: griefScore must be between 0‚Äì10
     - Prevent empty title/description uploads

---

8. üßæ VISIBILITY & CONTENT FIXES
   - Title tag: fix to uppercase: `<title>GUARDIANCHAIN | Sovereign Memory Engine</title>`
   - Add favicon and social meta tags in `app/layout.tsx` or `_document.tsx`
   - Fix spelling of ‚ÄúVeritas‚Äù and ‚ÄúGuardianChain‚Äù everywhere for consistency

---

9. üí≥ STRIPE / UNLOCK LOGIC (PRECHECK)
   - Confirm `pages/api/checkout.ts` and `/success.tsx` correctly listen for `checkout.session.completed`
   - Ensure griefScore and capsuleId are passed into `metadata` at checkout
   - Webhook URL: `/api/payment-success`

---

üîö OUTPUT:
- Overwrite and commit all changed files
- Generate final `guardian_upgrade_summary.md` with:
  - Files changed
  - Components fixed
  - Remaining TODOs (if any)

