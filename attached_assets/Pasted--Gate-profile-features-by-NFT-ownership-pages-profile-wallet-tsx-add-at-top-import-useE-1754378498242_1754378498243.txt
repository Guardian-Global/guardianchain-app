// ✅ Gate profile features by NFT ownership — pages/profile/[wallet].tsx (add at top)
import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import { ethers } from 'ethers';
import CapsuleNFT from '@/contracts/CapsuleNFT.json';

export default function ProfilePage() {
  const { query } = useRouter();
  const wallet = query.wallet;
  const [media, setMedia] = useState([]);
  const [hasAccess, setHasAccess] = useState(false);

  useEffect(() => {
    async function checkOwnership() {
      const provider = new ethers.JsonRpcProvider(process.env.NEXT_PUBLIC_ALCHEMY_URL);
      const contract = new ethers.Contract(process.env.NEXT_PUBLIC_NFT_CONTRACT_ADDR, CapsuleNFT.abi, provider);
      const balance = await contract.balanceOf(wallet);
      setHasAccess(balance > 0);
    }
    if (wallet) checkOwnership();
  }, [wallet]);

  useEffect(() => {
    if (wallet && hasAccess) loadMedia();
  }, [wallet, hasAccess]);

  const loadMedia = async () => {
    const res = await fetch(`/api/user-media?wallet=${wallet}`);
    const data = await res.json();
    setMedia(data);
  };

  if (!hasAccess) return <p className="text-center text-red-500 mt-10">🔒 You must own a GuardianCapsule NFT to access this profile.</p>;

  return (
    <div className="max-w-6xl mx-auto p-8">
      <h1 className="text-3xl font-bold text-white mb-6">🎞️ {wallet}'s Capsule Gallery</h1>
      <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
        {media.map((m, idx) => (
          <div key={idx} className="bg-slate-900 p-2 rounded-xl shadow-xl">
            <img src={m.image_url} alt={m.name} className="rounded w-full h-48 object-cover" />
            <p className="text-sm text-white mt-2 truncate">{m.name}</p>
          </div>
        ))}
      </div>
    </div>
  );
}

// ✅ Remember Wallet in Session — components/MetaMaskConnect.tsx
useEffect(() => {
  const stored = localStorage.getItem('guardian_wallet');
  if (stored) setAccount(stored);
}, []);

// inside connectMetaMask()
localStorage.setItem('guardian_wallet', wallet);

// ✅ Enable ENS Display (optional)
import { useEffect } from 'react';
const [ens, setEns] = useState(null);

useEffect(() => {
  if (!wallet) return;
  const provider = new ethers.JsonRpcProvider('https://mainnet.infura.io/v3/YOUR_INFURA_KEY');
  provider.lookupAddress(wallet).then(setEns);
}, [wallet]);

// Replace wallet display with:
<p>Connected: {ens || wallet}</p>

// ✅ Optional: Allow wallet switching
<button onClick={() => localStorage.removeItem('guardian_wallet')} className="text-sm text-red-400">🔁 Switch Wallet</button>
