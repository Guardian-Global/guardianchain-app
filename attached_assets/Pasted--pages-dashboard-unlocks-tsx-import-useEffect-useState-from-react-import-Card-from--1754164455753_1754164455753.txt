// pages/dashboard/unlocks.tsx
import { useEffect, useState } from "react";
import { Card } from "@/components/ui/card";
import { format } from "date-fns";
import { unparse } from "papaparse";

export default function UnlocksDashboard() {
  const [unlocks, setUnlocks] = useState([]);
  const [filtered, setFiltered] = useState([]);
  const [auctionId, setAuctionId] = useState("");
  const [walletAddress, setWalletAddress] = useState("");

  useEffect(() => {
    fetch("/api/unlocks")
      .then((res) => res.json())
      .then((data) => {
        setUnlocks(data);
        setFiltered(data);
      });
  }, []);

  const handleFilter = () => {
    const filteredData = unlocks.filter((u) => {
      const matchesAuction = auctionId ? u.auction_id.includes(auctionId) : true;
      const matchesWallet = walletAddress ? u.wallet_address.includes(walletAddress) : true;
      return matchesAuction && matchesWallet;
    });
    setFiltered(filteredData);
  };

  const handleExportCSV = () => {
    const csv = unparse(filtered);
    const blob = new Blob([csv], { type: 'text/csv' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = 'unlocks.csv';
    link.click();
  };

  const handleExportJSON = () => {
    const blob = new Blob([JSON.stringify(filtered, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = 'unlocks.json';
    link.click();
  };

  return (
    <main className="min-h-screen bg-slate-900 text-white px-6 py-16">
      <h1 className="text-3xl font-bold mb-6">ðŸ“œ Unlock Activity</h1>

      <div className="flex gap-4 mb-6 flex-wrap">
        <input
          type="text"
          value={auctionId}
          onChange={(e) => setAuctionId(e.target.value)}
          placeholder="Filter by Auction ID"
          className="bg-slate-700 text-white px-3 py-2 rounded"
        />
        <input
          type="text"
          value={walletAddress}
          onChange={(e) => setWalletAddress(e.target.value)}
          placeholder="Filter by Wallet Address"
          className="bg-slate-700 text-white px-3 py-2 rounded"
        />
        <button
          onClick={handleFilter}
          className="bg-indigo-600 text-white px-4 py-2 rounded"
        >
          Apply Filters
        </button>
        <button
          onClick={handleExportCSV}
          className="bg-green-600 text-white px-4 py-2 rounded"
        >
          Export CSV
        </button>
        <button
          onClick={handleExportJSON}
          className="bg-blue-600 text-white px-4 py-2 rounded"
        >
          Export JSON
        </button>
      </div>

      {filtered.length === 0 ? (
        <p className="text-slate-400">No unlocks found.</p>
      ) : (
        <div className="grid gap-4 max-w-4xl mx-auto">
          {filtered.map((u) => (
            <Card key={u.id} className="bg-slate-800 p-4">
              <p><strong>Auction ID:</strong> {u.auction_id}</p>
              <p><strong>Wallet:</strong> {u.wallet_address}</p>
              <p className="text-slate-400 text-sm">{format(new Date(u.unlocked_at), 'PPpp')}</p>
            </Card>
          ))}
        </div>
      )}
    </main>
  );
}
