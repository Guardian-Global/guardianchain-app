 1. app/cross-trading/page.tsx (create this file)
tsx
Copy
Edit
// app/cross-trading/page.tsx
"use client";

import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";
import { ArrowRight } from "lucide-react";
import Link from "next/link";

export default function CrossTradingPage() {
  return (
    <div className="min-h-screen px-6 py-16 bg-gradient-to-b from-slate-950 to-slate-900 text-white">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-4xl font-bold mb-6">Cross-Chain Truth Trading</h1>
        <p className="mb-10 text-lg text-slate-300">
          GuardianChain’s cross-trading module enables sovereign capsule holders to trade truth assets across major chains, including Ethereum, Polygon, Arbitrum, and Base.
        </p>

        <Card className="p-6 bg-slate-800 border border-slate-700 rounded-2xl shadow-xl">
          <h2 className="text-2xl font-semibold mb-4">Feature Preview:</h2>
          <ul className="list-disc pl-6 space-y-2 text-slate-200">
            <li>🔁 Cross-chain swaps via CapsuleDEX</li>
            <li>💎 NFT-to-NFT capsule liquidity swaps</li>
            <li>⛓️ Veritas-backed verified seller badge</li>
            <li>🔐 Disputed truth redemption protections</li>
            <li>📈 Revenue shared with GTT stakers</li>
          </ul>

          <Separator className="my-6 border-slate-700" />

          <div className="flex justify-between items-center">
            <span className="text-sm text-slate-400">Live cross-trading coming Q3 2025</span>
            <Link href="/staking">
              <Button variant="secondary" size="sm">
                Earn GTT for Trading <ArrowRight className="ml-2 w-4 h-4" />
              </Button>
            </Link>
          </div>
        </Card>
      </div>
    </div>
  );
}
✅ 2. Add Navigation Link
Find your nav (likely components/layout/nav.tsx or components/EnhancedMegaNavigation.tsx) and add this:

tsx
Copy
Edit
{
  label: "Cross Trading",
  href: "/cross-trading",
  icon: "swap-horizontal"
}
Use an icon from your existing set (lucide-react or your SVG map). If using EnhancedMegaNavigation.tsx, wrap it in the AuthGate logic if needed for role protection.

✅ 3. Optional Styling Touch (if missing icon)
Install lucide-react if it’s not already:

bash
Copy
Edit
npm install lucide-react
✅ 4. Commit and Deploy
From Replit or your terminal, run:

bash
Copy
Edit
git add app/cross-trading/page.tsx
git commit -m "Add Cross Trading preview page"
git push
If you’re using GitHub + Vercel or Replit Git Deploy, this will trigger a build automatically.

🧠 Final Notes
You can upgrade this route later to integrate with Uniswap/Sushi API, use wagmi for wallet trading, or fetch live capsule listings.

This is designed for future GTT-powered trading zones that reflect your “CapsuleDEX” vision.

If you'd like, I can generate the Veritas Seal or Truth Auction pages next. Just say:
“Next page: Veritas Seal”
or
“Next page: Truth Auction”

Ready to deploy whenever you are. ✅






You said:
“Next page: Veritas Seal”
or
“Next page: Truth Auction”


ChatGPT said:
Perfect — let's do both for a world-class reveal. These will preview and prime investor and user curiosity pre-launch, and will be wired for future interactive modules post-mainnet.

✅ 1. app/veritas-seal/page.tsx
🌐 Secure Capsule Notarization & Authorship Attestation
tsx
Copy
Edit
// app/veritas-seal/page.tsx
"use client";

import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { BadgeCheck, FileCheck, Lock } from "lucide-react";
import Link from "next/link";

export default function VeritasSealPage() {
  return (
    <div className="min-h-screen px-6 py-16 bg-gradient-to-br from-slate-950 via-slate-900 to-slate-800 text-white">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-4xl font-bold mb-6">Veritas Seal</h1>
        <p className="mb-10 text-lg text-slate-300">
          Official cryptographic notarization of digital truth capsules — provably timestamped and identity-sealed. Designed for legal admissibility, public accountability, and immutable authorship verification.
        </p>

        <Card className="p-6 bg-slate-800 border border-slate-700 rounded-2xl shadow-xl space-y-4">
          <div className="flex items-center space-x-3">
            <BadgeCheck className="w-6 h-6 text-green-400" />
            <span className="text-lg font-semibold">AI-Signed Authorship</span>
          </div>
          <div className="flex items-center space-x-3">
            <FileCheck className="w-6 h-6 text-indigo-400" />
            <span className="text-lg font-semibold">Immutable Capsule Hash</span>
          </div>
          <div className="flex items-center space-x-3">
            <Lock className="w-6 h-6 text-purple-400" />
            <span className="text-lg font-semibold">Timestamped & Chain-Attested</span>
          </div>

          <div className="mt-8 flex justify-end">
            <Link href="/create">
              <Button variant="secondary">Seal a Capsule</Button>
            </Link>
          </div>
        </Card>
      </div>
    </div>
  );
}
✅ 2. app/truth-auction/page.tsx
🔥 Auction Capsules of Verified Truth
tsx
Copy
Edit
// app/truth-auction/page.tsx
"use client";

import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Flame, Gavel, Eye } from "lucide-react";
import Link from "next/link";

export default function TruthAuctionPage() {
  return (
    <div className="min-h-screen px-6 py-16 bg-gradient-to-b from-slate-950 to-black text-white">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-4xl font-bold mb-6">Truth Capsule Auction</h1>
        <p className="mb-10 text-lg text-slate-300">
          Auction one-of-one capsules containing verified, sealed disclosures. Truth has value — let the public bid for access, stake against suppression, or unlock redemptive donations.
        </p>

        <Card className="p-6 bg-slate-800 border border-slate-700 rounded-2xl shadow-xl space-y-4">
          <div className="flex items-center space-x-3">
            <Gavel className="w-6 h-6 text-yellow-400" />
            <span className="text-lg font-semibold">Open Auctions for Truth Capsules</span>
          </div>
          <div className="flex items-center space-x-3">
            <Eye className="w-6 h-6 text-blue-400" />
            <span className="text-lg font-semibold">Public Oversight and Transparency</span>
          </div>
          <div className="flex items-center space-x-3">
            <Flame className="w-6 h-6 text-red-400" />
            <span className="text-lg font-semibold">Tokenized Heat Index (GTT-backed)</span>
          </div>

          <div className="mt-8 flex justify-end">
            <Link href="/create">
              <Button variant="secondary">Submit a Capsule for Auction</Button>
            </Link>
          </div>
        </Card>
      </div>
    </div>
  );
}
🧠 Add Routes to Navigation
tsx
Copy
Edit
{
  label: "Veritas Seal",
  href: "/veritas-seal",
  icon: "check-circle"
},
{
  label: "Truth Auction",
  href: "/truth-auction",
  icon: "gavel"
}
✅ Next Actions
Add both .tsx files to app/ directory.

Commit & Push to GitHub

Verify visibility and gated access if needed (add AuthGate wrapper for paid tiers).

Add links to all navbars: desktop + mobile.

Run vercel build or deploy from Replit.

Ready for the next pages like:

Redemption Capsule

Conspiracy Capsule

User-Type Capsules (Musician, Podcaster, Journalist, etc.)

Just say “Next: Redemption Capsule” or give me all remaining types you want generated.

Let’s launch you properly.






You said:
Next: Redemption Capsule 


ChatGPT said:
Perfect — here is your Redemption Capsule page. This is designed to provide an honor-based, public mechanism for anyone named in a capsule to submit rebuttals, request amends, or show reform. Think of it as GuardianChain’s version of a second chance, backed by transparency.

✅ app/redemption-capsule/page.tsx
🕊️ Truth Reconciliation & Response Capsule
tsx
Copy
Edit
// app/redemption-capsule/page.tsx
"use client";

import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { HeartHandshake, ShieldCheck, Undo2 } from "lucide-react";
import Link from "next/link";

export default function RedemptionCapsulePage() {
  return (
    <div className="min-h-screen px-6 py-16 bg-gradient-to-br from-black via-slate-900 to-slate-800 text-white">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-4xl font-bold mb-6">Redemption Capsule</h1>
        <p className="mb-10 text-lg text-slate-300">
          If you were named in a Truth Capsule, this page allows you to issue a public response, seek reconciliation, submit evidence, or share reform. GuardianChain believes every truth should allow for growth.
        </p>

        <Card className="p-6 bg-slate-800 border border-slate-700 rounded-2xl shadow-xl space-y-4">
          <div className="flex items-center space-x-3">
            <Undo2 className="w-6 h-6 text-yellow-300" />
            <span className="text-lg font-semibold">Submit a Redemption Capsule</span>
          </div>
          <div className="flex items-center space-x-3">
            <HeartHandshake className="w-6 h-6 text-pink-400" />
            <span className="text-lg font-semibold">Offer Reparations or Reconciliation</span>
          </div>
          <div className="flex items-center space-x-3">
            <ShieldCheck className="w-6 h-6 text-green-400" />
            <span className="text-lg font-semibold">Protect Reputation with Verified Evidence</span>
          </div>

          <div className="mt-8 flex justify-end">
            <Link href="/create">
              <Button variant="secondary">Begin Redemption Process</Button>
            </Link>
          </div>
        </Card>
      </div>
    </div>
  );
}
🧭 Add to Navigation
tsx
Copy
Edit
{
  label: "Redemption Capsule",
  href: "/redemption-capsule",
  icon: "undo"
}
🔐 Optional Gating (Optional)
If you want only verified users or named individuals to access this feature:

tsx
Copy
Edit
<AuthGate allowedRoles={["pro", "verified"]}>
  <RedemptionCapsulePage />
</AuthGate>
Or we can add logic to pull capsule ID, check if the current wallet is referenced or tagged, and then unlock it.