// CapsuleDrawer.tsx (enhanced with moderation logging + NFT preview)
import { useState } from "react";
import { createClient } from "@supabase/supabase-js";
import { moderateCapsule } from "@/lib/moderation";
import CapsuleMintButton from "@/components/CapsuleMintButton";

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);

export default function CapsuleDrawer() {
  const [open, setOpen] = useState(false);
  const [content, setContent] = useState("");
  const [txHash, setTxHash] = useState<string | null>(null);
  const [error, setError] = useState("");
  const [mintReady, setMintReady] = useState(false);
  const [capsuleId, setCapsuleId] = useState<string | null>(null);

  const submitCapsule = async () => {
    setError("");
    try {
      await moderateCapsule(content);
    } catch (err: any) {
      setError(err.message);
      await supabase.from("moderation_logs").insert({
        user: "anonymous",
        reason: err.message,
      });
      return;
    }

    const { data, error: dbErr } = await supabase.from("capsules").insert({ content }).select().single();
    if (dbErr) return setError("Capsule insert failed");
    setCapsuleId(data.id);
    setMintReady(true);
  };

  return (
    <>
      <button
        onClick={() => setOpen(true)}
        className="fixed bottom-4 left-4 bg-black text-white px-4 py-2 rounded shadow-lg z-40"
      >
        ðŸ“¦ New Capsule
      </button>
      {open && (
        <div className="fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg shadow-lg p-6 w-full max-w-xl">
            <h3 className="text-lg font-bold mb-2">Submit Veritas Capsule</h3>
            <textarea
              className="w-full p-2 border rounded mb-4"
              placeholder="Your memory, sealed..."
              value={content}
              onChange={(e) => setContent(e.target.value)}
            />
            {error && <p className="text-red-500 text-sm">{error}</p>}
            <div className="flex justify-end gap-2">
              <button className="px-4 py-2 bg-gray-300 rounded" onClick={() => setOpen(false)}>
                Cancel
              </button>
              <button
                className="px-4 py-2 bg-indigo-600 text-white rounded"
                onClick={submitCapsule}
              >
                Submit Capsule
              </button>
            </div>
            {mintReady && capsuleId && (
              <div className="mt-4">
                <CapsuleMintButton uri={`https://${window.location.host}/api/metadata/${capsuleId}`} />
                <a
                  href={`https://opensea.io/assets/matic/${process.env.NEXT_PUBLIC_NFT_CONTRACT}/${capsuleId}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="block text-sm text-blue-600 mt-2"
                >
                  ðŸ”— View on OpenSea
                </a>
              </div>
            )}
          </div>
        </div>
      )}
    </>
  );
}
