// Capsule Creation + NFT Minting + AI UX

export default function CapsuleCreator() {
  const [title, setTitle] = useState("");
  const [summary, setSummary] = useState("");
  const [lockDuration, setLockDuration] = useState(365);
  const [aiImageUrl, setAiImageUrl] = useState("");
  const [minted, setMinted] = useState(false);
  const [txn, setTxn] = useState("");
  const [recipient, setRecipient] = useState("");
  const [platform, setPlatform] = useState("twitter");

  const generateImage = async () => {
    const res = await fetch("/api/generate-image", {
      method: "POST",
      body: JSON.stringify({ prompt: summary }),
    });
    const { url } = await res.json();
    setAiImageUrl(url);
  };

  const mintCapsule = async () => {
    const res = await fetch("/api/mint-capsule", {
      method: "POST",
      body: JSON.stringify({ title, summary, lockDuration, aiImageUrl }),
    });
    const { txHash } = await res.json();
    setTxn(txHash);
    setMinted(true);
  };

  const shareCapsule = () => {
    let shareUrl = "";
    const capsuleUrl = encodeURIComponent(`https://guardianchain.app/view/${txn}`);
    if (platform === "twitter") shareUrl = `https://twitter.com/intent/tweet?text=Check out my Guardian Capsule&url=${capsuleUrl}`;
    if (platform === "ens") shareUrl = `https://ens.app/share?capsule=${capsuleUrl}`;
    window.open(shareUrl, "_blank");
  };

  return (
    <div className="p-6 max-w-3xl mx-auto">
      <h1 className="text-3xl font-bold mb-4">Create a Capsule</h1>

      <input
        className="w-full mb-3 p-2 border rounded"
        placeholder="Title"
        value={title}
        onChange={(e) => setTitle(e.target.value)}
      />

      <textarea
        className="w-full mb-3 p-2 border rounded"
        rows={4}
        placeholder="Summary or message to preserve"
        value={summary}
        onChange={(e) => setSummary(e.target.value)}
      />

      <input
        className="w-full mb-3 p-2 border rounded"
        placeholder="Recipient ENS/Wallet (optional)"
        value={recipient}
        onChange={(e) => setRecipient(e.target.value)}
      />

      <label className="block mb-2">Lock Duration (days)</label>
      <input
        type="number"
        min={1}
        max={10000}
        value={lockDuration}
        onChange={(e) => setLockDuration(parseInt(e.target.value))}
        className="mb-4 p-2 border rounded w-full"
      />

      <button
        onClick={generateImage}
        className="bg-indigo-600 text-white px-4 py-2 rounded mb-4"
      >
        Generate AI Image
      </button>

      {aiImageUrl && <img src={aiImageUrl} alt="AI Capsule" className="rounded mb-4" />}

      <button
        onClick={mintCapsule}
        className="bg-green-600 text-white px-6 py-2 rounded"
      >
        Mint Capsule
      </button>

      {minted && (
        <div className="mt-6">
          <p className="text-sm text-gray-600 mb-2">
            âœ… Capsule minted. <a href={`https://polygonscan.com/tx/${txn}`} target="_blank" className="text-blue-500 underline">View on PolygonScan</a>
          </p>

          <select
            value={platform}
            onChange={(e) => setPlatform(e.target.value)}
            className="mb-2 p-2 border rounded"
          >
            <option value="twitter">Twitter/X</option>
            <option value="ens">ENS Unlock</option>
          </select>

          <button
            onClick={shareCapsule}
            className="bg-blue-600 text-white px-4 py-2 rounded"
          >
            Share Capsule
          </button>
        </div>
      )}
    </div>
  );
}
