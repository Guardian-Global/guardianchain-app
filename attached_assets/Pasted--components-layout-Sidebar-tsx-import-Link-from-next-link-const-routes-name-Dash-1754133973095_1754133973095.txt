// components/layout/Sidebar.tsx
import Link from "next/link";

const routes = [
  { name: "Dashboard", href: "/admin", roles: ["admin", "dao-owner"] },
  { name: "Capsules", href: "/capsules", roles: ["guest", "member", "admin"] },
  { name: "Replay", href: "/replay", roles: ["member", "moderator"] },
  { name: "Yield", href: "/yield", roles: ["admin", "dao-owner"] },
  { name: "DAO", href: "/dao", roles: ["dao-owner"] },
];

const Sidebar = ({ userTier = "admin" }: { userTier?: string }) => {
  return (
    <aside className="w-64 bg-white border-r hidden md:block">
      <div className="p-4 font-bold text-xl tracking-tight">🛡️ GuardianChain</div>
      <ul className="space-y-2">
        {routes
          .filter((r) => r.roles.includes(userTier))
          .map((route) => (
            <li key={route.name} className="px-4 py-2 hover:bg-gray-100">
              <Link href={route.href} className="block text-gray-800 font-medium">
                {route.name}
              </Link>
            </li>
          ))}
      </ul>
    </aside>
  );
};

export default Sidebar;


// components/layout/Topbar.tsx
import { useSession } from "@supabase/auth-helpers-react";

const Topbar = () => {
  const { data: session } = useSession();
  const tier = session?.user?.user_metadata?.tier || "guest";

  return (
    <header className="flex items-center justify-between px-6 py-4 bg-white border-b">
      <div className="text-sm font-medium text-gray-600">👤 {session?.user?.email || "Guest"}</div>
      <div className="text-sm text-gray-400">Tier: <strong>{tier}</strong></div>
    </header>
  );
};

export default Topbar;


// components/layout/CommandPalette.tsx
import { useState } from "react";

const CommandPalette = () => {
  const [open, setOpen] = useState(false);

  const commands = [
    { label: "Go to Dashboard", action: () => (window.location.href = "/admin") },
    { label: "Submit Capsule", action: () => (window.location.href = "/capsules") },
    { label: "View Replay", action: () => (window.location.href = "/replay") },
    { label: "Access DAO", action: () => (window.location.href = "/dao") },
  ];

  return (
    <>
      <button
        onClick={() => setOpen(true)}
        className="fixed bottom-4 right-4 bg-indigo-600 text-white px-4 py-2 rounded shadow-lg"
      >
        ⌘K
      </button>
      {open && (
        <div className="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50">
          <div className="bg-white rounded p-6 w-96 max-w-full">
            <h2 className="font-semibold text-lg mb-4">🔎 Command Menu</h2>
            <ul className="space-y-2">
              {commands.map((cmd, idx) => (
                <li key={idx}>
                  <button
                    onClick={() => {
                      cmd.action();
                      setOpen(false);
                    }}
                    className="w-full text-left hover:bg-gray-100 px-3 py-2 rounded"
                  >
                    {cmd.label}
                  </button>
                </li>
              ))}
            </ul>
          </div>
        </div>
      )}
    </>
  );
};

export default CommandPalette;
