🏅 Capsule Reputation Badge
1. Supabase Table (if not already created)
sql
Copy
Edit
create table if not exists capsule_reputation (
  capsule_id uuid primary key,
  score integer,
  tier text check (tier in ('bronze', 'silver', 'gold', 'platinum')),
  updated_at timestamptz default now()
);
2. Backend Logic (run in weekly cron or after each engagement spike)
ts
Copy
Edit
function determineReputation(score) {
  if (score >= 90) return "platinum";
  if (score >= 70) return "gold";
  if (score >= 40) return "silver";
  return "bronze";
}

await supabase.from("capsule_reputation").upsert({
  capsule_id,
  score: finalScore,
  tier: determineReputation(finalScore)
});
3. Badge Component (components/CapsuleReputationBadge.tsx)
tsx
Copy
Edit
export default function CapsuleReputationBadge({ tier }) {
  const colorMap = {
    bronze: "text-amber-500 border-amber-600",
    silver: "text-slate-300 border-slate-500",
    gold: "text-yellow-400 border-yellow-500",
    platinum: "text-cyan-300 border-cyan-500"
  };

  return (
    <span className={`border px-3 py-1 rounded-full text-xs font-bold ${colorMap[tier]}`}>
      🏅 {tier.toUpperCase()} Capsule
    </span>
  );
}
📈 User Engagement Chart in Profile
1. API: /api/profile/stats/[userId]/daily
ts
Copy
Edit
select
  date_trunc('day', created_at) as day,
  count(*) as interactions
from user_capsule_interactions
where user_id = $userId
group by 1
order by 1 asc;
2. Component: ProfileEngagementChart.tsx
tsx
Copy
Edit
import { Line } from "react-chartjs-2";

export default function ProfileEngagementChart({ data }) {
  return (
    <div className="bg-black p-4 rounded-lg">
      <h3 className="text-xl text-cyan-400 mb-2">📊 Engagement Over Time</h3>
      <Line
        data={{
          labels: data.map(d => d.day),
          datasets: [{
            label: "Interactions",
            data: data.map(d => d.interactions),
            borderColor: "#00ffe1",
            backgroundColor: "rgba(0,255,255,0.1)",
          }]
        }}
      />
    </div>
  );
}
🔍 Capsule Audit Trail Viewer
1. SQL Table (should already exist):
sql
Copy
Edit
create table if not exists capsule_activity_log (
  id uuid primary key default gen_random_uuid(),
  capsule_id uuid,
  user_id uuid,
  action text,
  created_at timestamptz default now()
);
2. Viewer: CapsuleAuditTrail.tsx
tsx
Copy
Edit
export default function CapsuleAuditTrail({ capsuleId }) {
  const { data } = useSWR(`/api/capsule/audit/${capsuleId}`);

  return (
    <div className="bg-slate-900 p-4 rounded-lg">
      <h3 className="text-xl text-cyan-300 mb-4">🧾 Capsule Audit Log</h3>
      <ul className="space-y-2 text-sm text-slate-300">
        {data?.map(event => (
          <li key={event.id}>
            <strong>{event.action}</strong> by <em>{event.user_id.slice(0, 6)}</em> at{" "}
            {new Date(event.created_at).toLocaleString()}
          </li>
        ))}
      </ul>
    </div>
  );
}
✅ Complete capsule trust suite:

📛 Reputation tier badge

🔁 Profile engagement graph

🔍 Capsule audit trail with filterable log