// ðŸš€ GUARDIANCHAIN ENHANCED DEPLOYMENT UPGRADE
// This file summarizes a finalized, investor-ready, grant-qualified blueprint for full stack production + UX uplift

// âœ… PHASE 1: Intelligent Role-Aware Redirect on 404 Page
import { useEffect } from "react";
import { useRouter } from "next/router";
import { useSession } from "next-auth/react";

export default function Custom404() {
  const { data: session } = useSession();
  const router = useRouter();

  useEffect(() => {
    const tier = session?.user?.tier || "guest";
    if (tier === "admin") router.replace("/admin");
    else if (tier === "member") router.replace("/capsules");
    else router.replace("/replay");
  }, [session]);

  return <p className="p-8 text-center">Redirecting...</p>;
}


// âœ… PHASE 2: Breadcrumb Generator â€” Role-Accessible Aware
import { useRouter } from "next/router";
import { ROUTES } from "@/lib/routes";

export function Breadcrumbs() {
  const { pathname } = useRouter();
  const match = ROUTES.find((r) => r.path === pathname);
  return (
    <div className="text-xs text-gray-500 px-4 pt-1 pb-2">
      <span className="text-gray-400">Home</span>
      {match && <span> / {match.label.replace(/^[^a-zA-Z]+/, "")}</span>}
    </div>
  );
}


// âœ… PHASE 3: Topbar Route Search â€” Intelligent & Tiered
import { ROUTES } from "@/lib/routes";
import Link from "next/link";
import { useState } from "react";

export function TopbarCommandMenu({ tier = "guest" }: { tier?: string }) {
  const [query, setQuery] = useState("");
  const results = ROUTES.filter(
    (r) => r.roles.includes(tier) && r.label.toLowerCase().includes(query.toLowerCase())
  );

  return (
    <div className="relative">
      <input
        placeholder="Search..."
        value={query}
        onChange={(e) => setQuery(e.target.value)}
        className="px-3 py-1 rounded border text-sm"
      />
      {query && (
        <ul className="absolute z-50 mt-1 w-full bg-white border rounded shadow">
          {results.map((r) => (
            <li key={r.path}>
              <Link href={r.path} className="block px-3 py-1 hover:bg-gray-100 text-sm">
                {r.label} <span className="text-gray-400">({r.path})</span>
              </Link>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
}


// âœ… PHASE 4: Mobile Drawer Navigation
import { useState } from "react";
import Link from "next/link";
import { ROUTES } from "@/lib/routes";

export function MobileDrawer({ tier = "guest" }: { tier?: string }) {
  const [open, setOpen] = useState(false);
  return (
    <>
      <button onClick={() => setOpen(true)} className="md:hidden fixed top-3 left-3 z-50">â˜°</button>
      {open && (
        <div className="fixed inset-0 z-40 bg-black bg-opacity-50">
          <div className="bg-white w-3/4 h-full shadow-xl p-4">
            <button onClick={() => setOpen(false)} className="text-gray-600 mb-4">âœ• Close</button>
            <ul>
              {ROUTES.filter((r) => r.roles.includes(tier)).map((route) => (
                <li key={route.path} className="py-2">
                  <Link href={route.path} onClick={() => setOpen(false)} className="text-lg">
                    {route.label}
                  </Link>
                </li>
              ))}
            </ul>
          </div>
        </div>
      )}
    </>
  );
}
