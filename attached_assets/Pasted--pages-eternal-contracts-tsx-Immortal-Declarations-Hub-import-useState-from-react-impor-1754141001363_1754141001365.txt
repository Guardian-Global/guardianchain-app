// pages/eternal-contracts.tsx â€” Immortal Declarations Hub
import { useState } from "react";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { useAuth } from "@/hooks/useAuth";
import { Card } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";

export default function EternalContracts() {
  const { user, isAuthenticated } = useAuth();
  const [content, setContent] = useState("");
  const [summary, setSummary] = useState("");
  const [verifying, setVerifying] = useState(false);
  const [beneficiary, setBeneficiary] = useState("");
  const [unlockDate, setUnlockDate] = useState("");

  async function handleVerify() {
    setVerifying(true);
    const res = await fetch("/api/ai/verify-contract", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ content })
    });
    const data = await res.json();
    setSummary(data.summary);
    setVerifying(false);
  }

  async function handlePublish() {
    await fetch("/api/capsule/publish-contract", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        content,
        summary,
        author: user?.walletAddress,
        beneficiary,
        unlockDate
      })
    });
    alert("âœ… Immortal contract published to GuardianChain.");
  }

  return (
    <div className="max-w-4xl mx-auto p-6">
      <h1 className="text-4xl font-bold mb-6">Eternal Contracts</h1>
      <p className="text-gray-600 mb-4">
        Write permanent declarations. Use AI to verify clarity. Lock with wallet.
      </p>

      <Card className="mb-4 p-4">
        <Label>Contract Content</Label>
        <Textarea
          rows={10}
          value={content}
          onChange={(e) => setContent(e.target.value)}
          placeholder="Write your unchangeable truth here..."
        />
      </Card>

      <Button onClick={handleVerify} disabled={verifying} className="mb-4">
        {verifying ? "Verifying..." : "AI Veritas Check"}
      </Button>

      {summary && (
        <Card className="mb-4 p-4 bg-purple-50 border-purple-200">
          <Label>AI Summary</Label>
          <p className="text-sm text-purple-800 whitespace-pre-wrap">{summary}</p>
        </Card>
      )}

      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
        <div>
          <Label>Unlock Date (optional)</Label>
          <Input
            type="datetime-local"
            value={unlockDate}
            onChange={(e) => setUnlockDate(e.target.value)}
          />
        </div>
        <div>
          <Label>Beneficiary ENS or Wallet</Label>
          <Input
            placeholder="0x... or ENS"
            value={beneficiary}
            onChange={(e) => setBeneficiary(e.target.value)}
          />
        </div>
      </div>

      <Button onClick={handlePublish} className="w-full">
        ðŸ”’ Seal Permanently to GuardianChain
      </Button>
    </div>
  );
}
