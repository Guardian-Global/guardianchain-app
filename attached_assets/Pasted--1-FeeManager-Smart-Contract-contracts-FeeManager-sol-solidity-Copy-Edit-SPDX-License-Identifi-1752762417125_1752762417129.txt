 1. FeeManager Smart Contract (contracts/FeeManager.sol)
solidity
Copy
Edit
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

contract FeeManager {
    address public treasury;
    IERC20 public gttToken;

    mapping(string => uint256) public fees;
    mapping(address => mapping(string => bool)) public hasPaid;

    event FeePaid(address indexed user, string action, uint256 amount);

    constructor(address _gttToken, address _treasury) {
        gttToken = IERC20(_gttToken);
        treasury = _treasury;
        fees["mint"] = 50 * 1e18;
        fees["seal"] = 100 * 1e18;
        fees["proposal"] = 500 * 1e18;
    }

    function setFee(string memory action, uint256 amount) external {
        require(msg.sender == treasury, "Only treasury can set fees");
        fees[action] = amount;
    }

    function payFee(string memory action) external {
        uint256 fee = fees[action];
        require(fee > 0, "Fee not set");
        require(!hasPaid[msg.sender][action], "Fee already paid");

        gttToken.transferFrom(msg.sender, treasury, fee);
        hasPaid[msg.sender][action] = true;

        emit FeePaid(msg.sender, action, fee);
    }

    function resetFee(address user, string memory action) external {
        require(msg.sender == treasury, "Only treasury can reset");
        hasPaid[user][action] = false;
    }
}
✅ 2. Frontend Fee Display Component (client/src/components/FeeDisplay.tsx)
tsx
Copy
Edit
import React from 'react';

export const FeeDisplay = ({ action, amount }: { action: string; amount: number }) => (
  <div style={{ marginBottom: '1rem' }}>
    <h4>Protocol Fee: {amount} GTT</h4>
    <p>
      This fee supports the platform treasury and ensures sustainability for the GuardianChain
      ecosystem. All {action} actions require a one-time GTT payment.
    </p>
  </div>
);
✅ 3. Frontend Treasury Display Component (client/src/components/TreasuryDisplay.tsx)
tsx
Copy
Edit
import React from 'react';

export const TreasuryDisplay = ({ totalFees }: { totalFees: number }) => (
  <div>
    <h3>Treasury Total: {totalFees} GTT</h3>
    <p>All collected fees are directed to the DAO treasury for future protocol upgrades.</p>
  </div>
);
✅ 4. DAO Page with Fee Integration (client/src/pages/govern.tsx)
tsx
Copy
Edit
import React from 'react';
import { FeeDisplay } from '../components/FeeDisplay';
import { TreasuryDisplay } from '../components/TreasuryDisplay';

const GovernPage = () => {
  return (
    <main className="container">
      <h2>DAO Governance</h2>
      <FeeDisplay action="proposal" amount={500} />
      <TreasuryDisplay totalFees={12345} />
      {/* Add DAO voting logic and proposal interface here */}
    </main>
  );
};

export default GovernPage;
