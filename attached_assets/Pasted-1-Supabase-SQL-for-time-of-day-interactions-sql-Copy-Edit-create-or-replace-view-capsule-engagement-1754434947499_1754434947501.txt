1. Supabase SQL for time-of-day interactions
sql
Copy
Edit
create or replace view capsule_engagement_heatmap as
select
  capsule_id,
  extract(hour from created_at) as hour,
  extract(dow from created_at) as day_of_week,
  count(*) as interactions
from capsule_activity_log
group by capsule_id, hour, day_of_week;
2. Frontend Heatmap Component
components/analytics/EngagementHeatmap.tsx

tsx
Copy
Edit
import HeatMap from "react-heatmap-grid";

export default function EngagementHeatmap({ heatmapData }) {
  const xLabels = [...Array(24).keys()].map(h => `${h}:00`);
  const yLabels = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

  const data = yLabels.map((_, day) =>
    xLabels.map((_, hour) =>
      heatmapData.find(d => d.day_of_week === day && d.hour === hour)?.interactions || 0
    )
  );

  return (
    <div className="mt-6">
      <h3 className="text-xl font-bold text-cyan-400 mb-2">🔥 Engagement Heatmap</h3>
      <HeatMap
        xLabels={xLabels}
        yLabels={yLabels}
        data={data}
        background="black"
        squares
        cellStyle={(x, y, value) => ({
          background: `rgba(0,255,255,${value / 10})`,
          color: "#fff",
        })}
      />
    </div>
  );
}
Fetch data from /api/capsule/heatmap/:capsuleId.

🌐 Public Capsule Analytics Viewer
1. New Route /capsule/[id]/analytics
pages/capsule/[id]/analytics.tsx

tsx
Copy
Edit
import CapsuleAnalyticsBlock from "@/components/analytics/CapsuleAnalyticsBlock";

export default function CapsuleAnalyticsPage({ capsuleId }) {
  return (
    <main className="max-w-5xl mx-auto p-6">
      <h1 className="text-3xl text-cyan-300 font-bold mb-6">📈 Capsule Analytics</h1>
      <CapsuleAnalyticsBlock capsuleId={capsuleId} />
    </main>
  );
}
Ensure share buttons link here:

tsx
Copy
Edit
<Link href={`/capsule/${capsuleId}/analytics`}>
  <button className="text-cyan-500 hover:underline">📤 Share Analytics</button>
</Link>
🤖 AI Labeling for Capsule Behavior
1. Labeling Logic (optional via Supabase Edge Functions or backend)
Example prompt logic:

ts
Copy
Edit
const prompt = `
Capsule ID: ${capsuleId}
Views per day: ${JSON.stringify(viewCounts)}
Shares per day: ${JSON.stringify(shareCounts)}
Unlocks per day: ${JSON.stringify(unlockCounts)}

Please summarize capsule behavior (e.g. viral, dormant, abnormal spike, gradual growth).
Return a short label.
`;

const aiLabel = await fetch("https://api.openai.com/v1/chat/completions", {
  method: "POST",
  headers: {
    "Authorization": `Bearer ${process.env.OPENAI_API_KEY}`,
    "Content-Type": "application/json"
  },
  body: JSON.stringify({
    model: "gpt-4",
    messages: [{ role: "user", content: prompt }],
  })
}).then(res => res.json());
Save to capsule_behavior_labels table.